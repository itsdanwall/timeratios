#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_10dec/")
source("load_packages.R")
rm(list = ls())
pzwhl <- read_csv("raw_data/Time_Ratios_6_December.csv")
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_10dec/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
timerat <- read_csv("raw_data/Time_Ratios_6_December.csv")
# change column names
names(timerat) <- tolower(names(timerat))
# remove test runs
timerat <- timerat %>%
filter(finished == 1)
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_10dec/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
timerat <- read_csv("raw_data/Time_Ratios_6_December.csv")
# change column names
names(timerat) <- tolower(names(timerat))
# remove test runs
timerat <- timerat %>%
filter(finished == 1)
View(timerat)
timerat[, str_detect(names(pzwhl), "^(responseid|ul)")]
timerat[, str_detect(names(timerat), "^(responseid|ul)")]
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid")
diss
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(variable)))
diss
# get data so I can work on it for when people are switching
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value)))
diss
diss %>% head
# get data so I can work on it for when people are switching
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(serial) %>%
mutate(ratiochange = ifelse(variable %in% "ul5_6_1", "small", "large"))
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = ifelse(variable %in% "ul5_6_1", "small", "large"))
diss
diss %>% summary
diss %>% str
# get data so I can work on it for when people are switching
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = ifelse(variable %in% "ul5_6_1", "small", "large") %>%
factor)
diss %>% str
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
View(diss)
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = ifelse(variable %in% "ul5_6_1", "small", "large") %>%
factor)
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = ifelse(is.element("ul5_6_1", variable), "small", "large") %>%
factor)
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = ifelse(any(variable == "ul5_6_1"), "small", "large") %>%
factor)
are switching
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid) %>%
mutate(ratiochange = variable %in% "ul5_6_1")
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
View(diss)
diss_m <- diss %>%
group_by(responseid) %>%
summarise(ratcng = "ul5_6_1" %in% variable)
View(diss_m)
diss_m <- diss %>%
group_by(responseid) %>%
summarise(ratcng = ifelse("ul5_6_1" %in% variable, "small", "large"))
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE)
View(diss)
View(diss)
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE) %>%
mutate(ss_time = str_extract(variable, "\\d+"))
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+_1$"))
# get data so I can work on it for when people are switching
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
diss_m <- diss %>%
group_by(responseid) %>%
summarise(ratcng = ifelse("ul5_6_1" %in% variable, "small", "large"))
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+_1$") %>% str_extract("\\d+"))
diss_id <- read.csv("raw_data/diss_ids.csv")
View(diss_id)
names(diss_id)
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
melt(id = "id",
measure = c("ss_time", "ll_time", "ss_time_delayed_onset", "ll_time_delayed_onset"))
diss_id
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
melt(id = "id",
measure = c("ss_time", "ll_time", "ss_time_delayed_onset", "ll_time_delayed_onset")) %>%
mutate(time = str_extract(variable, "(ss_time|ll_time)"))
diss_id
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
melt(id = "id",
measure = c("ss_time", "ll_time", "ss_time_delayed_onset", "ll_time_delayed_onset")) %>%
mutate(time = str_extract(variable, "(ss_time|ll_time)")) %>%
dcast(id ~ time, value.var = "value")
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
melt(id = "id",
measure = c("ss_time", "ll_time", "ss_time_delayed_onset", "ll_time_delayed_onset")) %>%
mutate(time = str_extract(variable, "(ss_time|ll_time)"),
type = ifelse)
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
melt(id = "id",
measure = c("ss_time", "ll_time", "ss_time_delayed_onset", "ll_time_delayed_onset")) %>%
mutate(time = str_extract(variable, "(ss_time|ll_time)"))
diss_id <- read.csv("raw_data/diss_ids.csv")
diss_id <- read.csv("raw_data/diss_ids.csv")
diss_id %>% names
merge(diss, diss_id, by = c("ss_time", "ll_time"))
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_10dec/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
timerat <- read_csv("raw_data/Time_Ratios_6_December.csv")
# change column names
names(timerat) <- tolower(names(timerat))
# remove test runs
timerat <- timerat %>%
filter(finished == 1)
# get data so I can work on it for when people are switching
# dissimilarity ids
diss_id <- read.csv("raw_data/diss_ids.csv") %>%
# filter data
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
# get which condition the participant was in
diss_m <- diss %>%
group_by(responseid) %>%
summarise(ratcng = ifelse("ul5_6_1" %in% variable, "small", "large"))
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+_1$") %>% str_extract("\\d+"))
# now merge with dissimilarity ids
diss <- merge(diss, diss_id, by = c("ss_time", "ll_time"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(diss)
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_10dec/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
timerat <- read_csv("raw_data/Time_Ratios_6_December.csv")
# change column names
names(timerat) <- tolower(names(timerat))
# remove test runs
timerat <- timerat %>%
filter(finished == 1)
# get data so I can work on it for when people are switching
# dissimilarity ids
diss_id <- read.csv("raw_data/diss_ids.csv")
# filter data
diss <- timerat[, str_detect(names(timerat), "^(responseid|ul)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
# get which condition the participant was in
diss_m <- diss %>%
group_by(responseid) %>%
summarise(ratcng = ifelse("ul5_6_1" %in% variable, "small", "large"))
diss <- merge(diss, diss_m, by = "responseid", all.x=TRUE) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+_1$") %>% str_extract("\\d+"))
# now merge with dissimilarity ids
diss <- merge(diss, diss_id, by = c("ss_time", "ll_time"))
diss %>% names()
dissc <- diss %>%
dcast(responseid + id + ss_time + ll_time + ratcng ~ delayed, value.var = "value")
View(dissc)
dissc <- diss %>%
dcast(responseid + id + ratcng ~ delayed, value.var = "value")
dissc <- diss %>%
dcast(responseid + id + ratcng ~ delayed, value.var = "value") %>%
mutate(diss_diff = delayed - not_delayed)
disssum <- dissc %>%
group_by(ratcng) %>%
summarise(mean_ratcng = mean(ratcng, na.rm = TRUE),
se_ratcng = std.error(ratcng, na.rm = TRUE)) %>%
mutate(lower = mean_ratcng - 1.96*se_ratcng,
upper = mean_ratcng + 1.96*se_ratcng)
ggplot(dissum, aes(x = ratcng, y = mean_ratcng)) +
geom_boxplot(position = "identity") +
geom_errorbar(aes(lower = lower, upper = upper))
disssum <- dissc %>%
group_by(ratcng) %>%
summarise(mean_ratcng = mean(diss_diff, na.rm = TRUE),
se_ratcng = std.error(diss_diff, na.rm = TRUE)) %>%
mutate(lower = mean_ratcng - 1.96*se_ratcng,
upper = mean_ratcng + 1.96*se_ratcng)
ggplot(dissum, aes(x = ratcng, y = mean_ratcng)) +
geom_boxplot(position = "identity") +
geom_errorbar(aes(lower = lower, upper = upper))
# mixed effects model
diss_lmer <- lmer(value ~ diss_type * item + (1|responseid),
diss)
disssum
ggplot(disssum, aes(x = ratcng, y = mean_ratcng)) +
geom_boxplot(position = "identity") +
geom_errorbar(aes(lower = lower, upper = upper))
ggplot(disssum, aes(x = ratcng, y = mean_ratcng)) +
geom_boxplot(position = "identity") +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(disssum, aes(x = ratcng, y = mean_ratcng)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
disssum <- dissc %>%
group_by(ratcng) %>%
summarise(mean_diffcng = mean(diss_diff, na.rm = TRUE),
se_diffcng = std.error(diss_diff, na.rm = TRUE)) %>%
mutate(lower = mean_diffcng - 1.96*se_diffcng,
upper = mean_diffcng + 1.96*se_diffcng)
ggplot(disssum, aes(x = ratcng, y = mean_ratcng)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(disssum, aes(x = ratcng, y = diffcng)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(disssum, aes(x = ratcng, y = mean_diffcng)) +
geom_point() +
# mixed effects model
geom_errorbar(aes(ymin = lower, ymax = upper))
diss_lmer <- lmer(diss_diff ~ ratcng + (1|responseid),
dissc)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
diss_lmer <- lmer(diss_diff ~ ratcng + (1|responseid) + (1|id),
dissc)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
eff_df <- Effect(c("ratcng"), diss_lmer) %>%
as.data.frame()
dissc <- diss %>%
dcast(responseid + id + ratcng ~ delayed, value.var = "value") %>%
mutate(diss_diff = delayed - not_delayed,
ratcng = factor(ratcng))
disssum <- dissc %>%
group_by(ratcng) %>%
summarise(mean_diffcng = mean(diss_diff, na.rm = TRUE),
se_diffcng = std.error(diss_diff, na.rm = TRUE)) %>%
mutate(lower = mean_diffcng - 1.96*se_diffcng,
upper = mean_diffcng + 1.96*se_diffcng)
ggplot(disssum, aes(x = ratcng, y = mean_diffcng)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
# mixed effects model
diss_lmer <- lmer(diss_diff ~ ratcng + (1|responseid),
dissc)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
eff_df <- Effect(c("ratcng"), diss_lmer) %>%
as.data.frame()
ggplot(eff_df, aes(x = ratcng, y = fit)) +
geom_line() +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(eff_df, aes(x = ratcng, y = fit)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper))
View(timerat)
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+-\\d+)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
# now lets look at the intertemporal choices
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+-\\d+)")]
itc
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+_\\d+)")]
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+_\\d+)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
group_by(responseid)
View(itc)
# now lets look at the intertemporal choices
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+_\\d+)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+$"))
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+_\\d+)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+$"))
group_by(responseid) %>%
merge(diss_id, by = c("ss_time", "ll_time"))
# now lets look at the intertemporal choices
itc <- timerat[, str_detect(names(timerat), "^(responseid|itc\\d+_\\d+)")] %>%
melt(id = "responseid") %>%
filter(!(is.na(value))) %>%
mutate(ss_time = str_extract(variable, "\\d+"),
ll_time = str_extract(variable, "\\d+$"))
group_by(responseid) %>%
merge(diss_id, by = c("ss_time", "ll_time"))
source('C:/git_repositories/timeratios/wave_10dec/0_gather_clean_data.R', echo=TRUE)
source('C:/git_repositories/timeratios/wave_10dec/0_gather_clean_data.R', echo=TRUE)
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == 2),
n_tot = n()) %>%
mutate(per_ll = n_ll = n_tot)
itc
itc %>%head
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n())
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n())
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot)
View(itc_sum)
prop.test()
?prop.test
library(broom)
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot,
tidy(prop.test(n_ll, n_tot)))
?tidy
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot) %>%
do( tidy(prop.test(.$n_ll, .$n_tot)))
itc_sum
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot)
itc_sum
itc %>%
group_by(diss_set, delayed) %>%
do( tidy(prop.test(.$n_ll, .$n_tot)))
itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot) %>%
group_by(diss_set, delayed) %>%
do( tidy(prop.test(.$n_ll, .$n_tot)))
ggplot(itc_sum,
aes(x = diss_set, y = estimate, group = delayed, ymax = conf.high,  ymin = conf.low)) +
geom_bar(stat="identity", position = dodge) +
geom_errorbar(position = dodge)
ggplot(itc_sum,
aes(x = diss_set, y = estimate, group = delayed, ymax = conf.high,  ymin = conf.low)) +
geom_bar(stat="identity", position = "dodge") +
geom_errorbar(position = "dodge")
itc_sum <- itc %>%
group_by(diss_set, delayed) %>%
summarise(n_ll = sum(value == "2"),
n_tot = n()) %>%
mutate(per_ll = n_ll/n_tot) %>%
group_by(diss_set, delayed) %>%
do( tidy(prop.test(.$n_ll, .$n_tot)))
ggplot(itc_sum,
aes(x = diss_set, y = estimate, group = delayed, ymax = conf.high,  ymin = conf.low)) +
geom_bar(stat="identity", position = "dodge") +
geom_errorbar(position = "dodge")
source('C:/git_repositories/timeratios/wave_10dec/0_gather_clean_data.R', echo=TRUE)
View(timerat)
