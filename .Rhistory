setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
names(pzwhl) <- tolower(names(pzwhl))
pzwhl <- pzwhl %>%
filter(finished == 1)
View(pzwhl)
names(pzwhl)
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
# change column names
names(pzwhl) <- tolower(names(pzwhl))
# remove test runs
pzwhl <- pzwhl %>%
filter(finished == 1)
names(pzwhl)
diffr <- pzwhl[, str_detect(names(pzwhl), "(rs_\\d_\\d|rb_\\d_\\d)")]
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")]
View(diffr)
on it for when people are switching
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid")
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diff_type = str_extract(variable, "(rs_rb)") %>%
factor)
View(pzwhl)
View(diffr)
View(diffr)
# get data so I can work on it for when people are switching
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diff_type = str_extract(variable, "(rs|rb)") %>%
factor)
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor)
View(diss)
diss$variable
# get data so I can work on it for when people are switching
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor,
item = str_extract(variable, "\\d"))
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
# change column names
names(pzwhl) <- tolower(names(pzwhl))
# remove test runs
pzwhl <- pzwhl %>%
filter(finished == 1)
# get data so I can work on it for when people are switching
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor,
item = str_extract(variable, "\\d") %>%
factor)
source('C:/git_repositories/timeratios/wave_26oct/0_gather_clean_data.R', echo=TRUE)
diss_lmer <- lmer(value ~ diss_type + item + (1|responseid),
diss)
summary(diss_lmer)
Anova(diss_lmer, type = 3)
eff_df <- Effect("diss_type", diss_lmer) %>%
as.data.frame()
eff_df
diss_lmer <- lmer(value ~ diss_type * item + (1|responseid),
diss)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
eff_df <- Effect(c("diss_type", "item"), diss_lmer) %>%
as.data.frame()
eff_df
ggplot(eff_df, aes(x = item, y = fit, group = diss_type, color = diss_type)) +
geom_line() +
geom_errorbar(aes(ymin = lower, ymax = upper))
source('C:/git_repositories/timeratios/wave_26oct/0_gather_clean_data.R', echo=TRUE)
n_distinct(pzwhl$responseid)
Anova(diss_lmer, type = 3)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
summary(diss_lmer)
ggplot(eff_df, aes(x = item, y = fit, group = diss_type, color = diss_type)) +
geom_line() +
geom_errorbar(aes(ymin = lower, ymax = upper))
3-.7
2.3/3
.7+.766
.7+.766+.766
install.packages("shinyapps")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
exp_disfac <- function(ssamt, sstime, llamt, lltime) {
(ssamt/llamt)^(1/(llamt - sstime))
}
exp_disfac(100, 1, 200, 2)
exp_disfac(100, 0, 200, 1)
exp_disfac <- function(ssamt, sstime, llamt, lltime) {
(ssamt/llamt)^(1/(lltime - sstime))
}
exp_disfac(100, 0, 200, 1)
numericInput
?numericInput
hyp_disfrac <- function(sstime, lltime, beta, tau) {
((1 + tau * sstime)/(1 + tau * sstime) + tau *(lltime - sstime)) ^(beta/tau)
}
hyp_disfrac(0, 1, .1, .1)
hyp_disfrac(0, 1, 1, 1)
hyp_disfrac <- function(sstime, lltime, beta, tau) {
((1 + tau * sstime)/(1 + tau * sstime + tau *(lltime - sstime))) ^(beta/tau)
}
hyp_disfrac(0, 1, .1, .1)
beta tau
hyp_val <- function(x, gamma, lambda, mu, sigma) {
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
}
}
hyp_val_df <- data.frame(x = 1:1000)
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
library(dplyr)
hyp_val_df %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val_df %>% rowwise %>%mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
```
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
?hyp_val
hyp_val
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val(10, 1, 1, 1, 1)
hyp_val(-10, 1, 1, 1, 1)
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
ifelse(x >= 0,(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma, -lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma))
}
}
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
ifelse(x >= 0,(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma, -lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma))
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val(-10, 1, 1, 1, 1)
