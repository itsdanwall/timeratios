setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
names(pzwhl) <- tolower(names(pzwhl))
pzwhl <- pzwhl %>%
filter(finished == 1)
View(pzwhl)
names(pzwhl)
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
# change column names
names(pzwhl) <- tolower(names(pzwhl))
# remove test runs
pzwhl <- pzwhl %>%
filter(finished == 1)
names(pzwhl)
diffr <- pzwhl[, str_detect(names(pzwhl), "(rs_\\d_\\d|rb_\\d_\\d)")]
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")]
View(diffr)
on it for when people are switching
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid")
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diff_type = str_extract(variable, "(rs_rb)") %>%
factor)
View(pzwhl)
View(diffr)
View(diffr)
# get data so I can work on it for when people are switching
diffr <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diff_type = str_extract(variable, "(rs|rb)") %>%
factor)
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor)
View(diss)
diss$variable
# get data so I can work on it for when people are switching
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor,
item = str_extract(variable, "\\d"))
#--------------
# Gather and clean data for the titrated values for ITC uncertainty
# Daniel Wall
# 3 November 2015
#--------------
setwd("/git_repositories/timeratios/wave_26oct/")
source("load_packages.R")
rm(list = ls())
#----read in the data----
pzwhl <- read_csv("raw_data/prizewheel_21Oct.csv")
# change column names
names(pzwhl) <- tolower(names(pzwhl))
# remove test runs
pzwhl <- pzwhl %>%
filter(finished == 1)
# get data so I can work on it for when people are switching
diss <- pzwhl[, str_detect(names(pzwhl), "(responseid|rs_\\d_\\d|rb_\\d_\\d)")] %>%
melt(id = "responseid") %>%
mutate(diss_type = str_extract(variable, "(rs|rb)") %>%
factor,
item = str_extract(variable, "\\d") %>%
factor)
source('C:/git_repositories/timeratios/wave_26oct/0_gather_clean_data.R', echo=TRUE)
diss_lmer <- lmer(value ~ diss_type + item + (1|responseid),
diss)
summary(diss_lmer)
Anova(diss_lmer, type = 3)
eff_df <- Effect("diss_type", diss_lmer) %>%
as.data.frame()
eff_df
diss_lmer <- lmer(value ~ diss_type * item + (1|responseid),
diss)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
eff_df <- Effect(c("diss_type", "item"), diss_lmer) %>%
as.data.frame()
eff_df
ggplot(eff_df, aes(x = item, y = fit, group = diss_type, color = diss_type)) +
geom_line() +
geom_errorbar(aes(ymin = lower, ymax = upper))
source('C:/git_repositories/timeratios/wave_26oct/0_gather_clean_data.R', echo=TRUE)
n_distinct(pzwhl$responseid)
Anova(diss_lmer, type = 3)
Anova(diss_lmer, type = 3)
summary(diss_lmer)
summary(diss_lmer)
ggplot(eff_df, aes(x = item, y = fit, group = diss_type, color = diss_type)) +
geom_line() +
geom_errorbar(aes(ymin = lower, ymax = upper))
3-.7
2.3/3
.7+.766
.7+.766+.766
install.packages("shinyapps")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
exp_disfac <- function(ssamt, sstime, llamt, lltime) {
(ssamt/llamt)^(1/(llamt - sstime))
}
exp_disfac(100, 1, 200, 2)
exp_disfac(100, 0, 200, 1)
exp_disfac <- function(ssamt, sstime, llamt, lltime) {
(ssamt/llamt)^(1/(lltime - sstime))
}
exp_disfac(100, 0, 200, 1)
numericInput
?numericInput
hyp_disfrac <- function(sstime, lltime, beta, tau) {
((1 + tau * sstime)/(1 + tau * sstime) + tau *(lltime - sstime)) ^(beta/tau)
}
hyp_disfrac(0, 1, .1, .1)
hyp_disfrac(0, 1, 1, 1)
hyp_disfrac <- function(sstime, lltime, beta, tau) {
((1 + tau * sstime)/(1 + tau * sstime + tau *(lltime - sstime))) ^(beta/tau)
}
hyp_disfrac(0, 1, .1, .1)
beta tau
hyp_val <- function(x, gamma, lambda, mu, sigma) {
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
}
}
hyp_val_df <- data.frame(x = 1:1000)
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
library(dplyr)
hyp_val_df %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val_df %>% rowwise %>%mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
```
hyp_val <- function(x, gamma, lambda, mu, sigma) {
x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
?hyp_val
hyp_val
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val(10, 1, 1, 1, 1)
hyp_val(-10, 1, 1, 1, 1)
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
if (x >= 0) {
(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma
} else if (x < 0) {
-lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma)
}
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
ifelse(x >= 0,(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma, -lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma))
}
}
hyp_val <- function(x, gamma, lambda, mu, sigma) {
# x <- as.numeric(x)
ifelse(x >= 0,(1 - gamma) * x^(1-gamma) + (mu *gamma * x) ^ gamma, -lambda*((1-gamma)*(-x) ^(1-gamma) + (mu + sigma)*gamma*(-x)^gamma))
}
hyp_val_df <- data.frame(x = -1000:1000)
hyp_val_df %>% rowwise %>% mutate(value = hyp_val(x, 1, 1, 1, 1))
hyp_val(-10, 1, 1, 1, 1)
w_t <- function (t, tau) {
(1/tau) * log(1 + tau*t)
}
w_t <- function (t, tau) {
(1/tau) * log(1 + tau*t)
}
int_fn <- function(sstime, lltime, alpha, theta, beta, tau) {
(1 + alpha * ((w_t(lltime) - w_t(sstime))/theta)^theta) ^(-beta/alpha)
}
int_df <- data.frame(int_len = 0:100)
int_fn <- function(sstime, lltime, alpha, theta, beta, tau) {
sstime <- as.numeric(sstime)
lltime <- as.numeric(lltime)
alpha <- as.numeric(alpha)
theta <- as.numeric(theta)
beta <- as.numeric(beta)
(1 + alpha * ((w_t(lltime) - w_t(sstime))/theta)^theta) ^(-beta/alpha)
}
int_fn <- function(int_len, int_onset, alpha, theta, beta, tau) {
int_len <- as.numeric(int_len)
int_onset <- as.numeric(int_onset)
alpha <- as.numeric(alpha)
theta <- as.numeric(theta)
beta <- as.numeric(beta)
ss_time <- int_onset
ll_time <- ss_time + int_len
(1 + alpha * ((w_t(lltime) - w_t(sstime))/theta)^theta) ^(-beta/alpha)
}
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1)
library(dplyr)
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1)
int_df1 <- int_df %>%
int_df1
int_df1
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1,
delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
int_df
int_fn <- function(int_len, int_onset, alpha, theta, beta, tau) {
int_len <- as.numeric(int_len)
int_onset <- as.numeric(int_onset)
alpha <- as.numeric(alpha)
theta <- as.numeric(theta)
beta <- as.numeric(beta)
ss_time <- int_onset
ll_time <- ss_time + int_len
(1 + alpha * ((w_t(lltime, tau) - w_t(sstime, tau))/theta)^theta) ^(-beta/alpha)
}
int_df <- data.frame(int_len = 0:100)
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1,
delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1)
int_df1
mutate(int_df1, delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
int_fn <- function(int_len, int_onset, alpha, theta, beta, tau) {
int_len <- as.numeric(int_len)
int_onset <- as.numeric(int_onset)
alpha <- as.numeric(alpha)
theta <- as.numeric(theta)
beta <- as.numeric(beta)
sstime <- int_onset
lltime <- ss_time + int_len
(1 + alpha * ((w_t(lltime, tau) - w_t(sstime, tau))/theta)^theta) ^(-beta/alpha)
}
int_df <- data.frame(int_len = 0:100)
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1)
mutate(int_df1, delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
int_fn <- function(int_len, int_onset, alpha, theta, beta, tau) {
int_len <- as.numeric(int_len)
int_onset <- as.numeric(int_onset)
alpha <- as.numeric(alpha)
theta <- as.numeric(theta)
beta <- as.numeric(beta)
sstime <- int_onset
lltime <- sstime + int_len
(1 + alpha * ((w_t(lltime, tau) - w_t(sstime, tau))/theta)^theta) ^(-beta/alpha)
}
int_df <- data.frame(int_len = 0:100)
int_df1 <- int_df %>%
mutate(int_onset = 1,
alpha = .1, theta = .1, beta = .1, tau = .1)
mutate(int_df1, delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
int_df
mutate(int_df1, delta = int_fn(int_len, int_onset, alpha, theta, beta, tau))
hypval <- function(x, k, t) {
disfrac <- 1/(1+k*t)
x*disfrac
}
hypval(10, .01, 105)
hypval(12, .01, 107)
pll <- function(ssutil, llutil) {
llutil/(ssutil + llutil)
}
pll(5.79, 4.88)
hypval(12, .01, 107)
pll(4.88, 5.79)
hypval(10, .01, 105)
pll(4.878049, 5.797101)
pll(9.52, 11.12)
pll(9.52, 11.21)
p_ll <- function(beta_intercept, beta_xa, beta_xr, beta_ta, beta_tr, x1, x2, t1, t2) {
x_rat <- (x2 - x1)/ ((x2 + x1)/2)
t_rat <- (t2 - t1)/ ((t2 + t1)/2)
reg <- beta_intercept + beta_xa*(x2 - x1) + beta_xr*(x_rat) +
beta_ta*(t2 - t1) + beta_tr*(t_rat)
plogis(reg)
}
p_ll(0.0, 0.1, 0.1, −0.1, −0.1, 10, 12, 5, 7)
p_ll(0.0, 0.1, 0.1, −0.1, −0.1, 10, 12, 105, 107)
p_ll <- function(beta_intercept, beta_xa, beta_xr, beta_ta, beta_tr, x1, x2, t1, t2) {
x_rat <- (x2 - x1)/ ((x2 + x1)/2)
t_rat <- (t2 - t1)/ ((t2 + t1)/2)
reg <- beta_intercept + beta_xa*(x2 - x1) + beta_xr*(x_rat) +
beta_ta*(t2 - t1) + beta_tr*(t_rat)
plogis(reg)
}
p_ll(0, .1, .1, -.5, -.01, 10, 11, 2, 12)
p_ll(0, .1, .1, -.1, -.1, 10, 11, 2, 12)
p_ll(0, .1, .1, -.5, -.1, 10, 11, 2, 12)
p_ll(0, .1, .1, -.5, -.1, 10, 11, 11, 12)
p_ll(0, .1, .1, -.1, -.1, 10, 11, 11, 12)
seq(0, 1, by = .001)
seq(0, 1, by = .001)
itch_val_df <- data.frame(beta_tr = seq(0, 1, by = .001))
itch_val_df
itch_val_df$beta_xa <- .1
itch_val_df$beta_xr <-.1
itch_val_df$beta_ta <-.1
itch_val_df$ssamnt <-10
itch_val_df$sstime <-1
itch_val_df$llamnt <-20
itch_val_df$lltime <-15
itch_val_df
itch_val_df %>% home
library(dplyr)
itch_val_df %>% head
itch_val_df <- mutate(itch_val_df, p_ll = p_ll(0.0, beta_xa, beta_xr, beta_ta, beta_tr, ssamnt, sstime,llamnt, lltime))
itch_val_df %>% head
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
library(ggplot2)
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
itch_val_df$beta_xa <- .1
itch_val_df$beta_xr <-.1
itch_val_df$beta_ta <-.1
itch_val_df$ssamnt <-10
itch_val_df$sstime <- 2
itch_val_df$llamnt <-11
itch_val_df$lltime <-12
itch_val_df <- mutate(itch_val_df, p_ll = p_ll(0.0, beta_xa, beta_xr, beta_ta, beta_tr, ssamnt, sstime,llamnt, lltime))
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
itch_val_df$beta_xa <- .1
itch_val_df$beta_xr <-.1
itch_val_df$beta_ta <-.1
itch_val_df$ssamnt <-10
itch_val_df$sstime <- 2
itch_val_df$llamnt <-11
itch_val_df$lltime <-15
itch_val_df <- mutate(itch_val_df, p_ll = p_ll(0.0, beta_xa, beta_xr, beta_ta, beta_tr, ssamnt, sstime,llamnt, lltime))
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
source('~/.active-rstudio-document', echo=TRUE)
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
source('~/.active-rstudio-document', echo=TRUE)
itch_val_df %>% head
itch_val_df <- data.frame(beta_tr = seq(-1, 0, by = .001))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
itch_val_df <- data.frame(beta_tr = seq(-1, 1, by = .001))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
itch_val_df <- mutate(itch_val_df, p_ll = p_ll(0.0, beta_xa, beta_xr, beta_ta, beta_tr, ssamnt, sstime,llamnt, lltime))
ggplot(itch_val_df, aes(x = beta_tr, y = p_ll, group = 1)) +
geom_line() +
xlab("beta_tr") +
ylab("probability of choosing larger later")
9/2
runif(3, 10, 20)
runif(3, 10, 20) %>% floor()
runif(3, 10, 20) %>% floor()
2*1.1
2*1.25
2*1.5
5*1.5
5*1.2
6*1.2
5*2.2
5*2.3
5*2.2
5*3.2
10*3.2
50*3.2
6/5
11/10
15/3
79.98 + 7.5
87.48/3
exp(-.01*1)
exp(-.01*1)*10
exp(-.01*10)*11
